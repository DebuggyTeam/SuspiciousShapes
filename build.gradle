plugins {
	id "maven-publish"
	id "org.quiltmc.loom" version "1.+"
}


base.archivesName = project.archives_base_name
version = "${project.version}+${project.minecraft}"
group = project.maven_group

repositories {
	maven {
		name 'Quilt'
		url 'https://maven.quiltmc.org/repository/release'
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft}"
	mappings "org.quiltmc:quilt-mappings:${project.minecraft}+build.${project.mappings}:intermediary-v2"

	modImplementation "org.quiltmc:quilt-loader:${project.loader}"
	modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${project.qfapi}"
}

processResources {
	inputs.property 'version', version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from('LICENSE') {
		rename { "${it}_${archivesBaseName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
